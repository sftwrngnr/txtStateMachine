#example1
#This example has two labels and a few functions
#There are no global variables in this example
#
# Note: Parameters are passed into the state machine are specified with <PARAMS:[CONST1],[CONST2],[VAR:VARNAME1]>
# State parameters are separated by Tabs not spaces!!
#
# Reserved labels are :EXEC, :DONE, :RETURN, :CONTINUE

:EXEC
STATE1
STATE2
:DONE #This will loop back to the beginning

STATE1:
S1Func1 <ERR:ERRHANDLER>
S1Func2 <ERR:ERRHANDLER>    <S1Func4>   <S1Func5> #If S1Func2 returns 0, S1Func4 is called, if it returns 1, S1Func5 is called otherwise ERRHANDLER is called.
S1Func3 <ERR:ERRHANDLER>
:RETURN #Return to next state in calling state

#In this case, the function is called, and returns to the next state in the STATE1 label
S1Func4 <ERR:ERRHANDLER>
:CONTINUE # Without this, the state machine would continue to S1Func5 and exit STATE1 without ever calling S1Func3

#In this case, the function is called, and returns from STATE1. There is no label associated with S1Func5
S1Func5 <ERR:ERRHANDLER>
:RETURN

STATE2:
S2Func1 [INT:[1]] <ERR:ERRHANDLER>
S2Func2 [STRING:["HELLO is alright."]]
:RETURN

ERRHANDLER:
ERROR
:RETURN #Alternatively, this can be DONE or CONTINUE depending on desired behavior